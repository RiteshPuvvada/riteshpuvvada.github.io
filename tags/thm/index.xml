<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>THM on Nightmare</title>
    <link>https://riteshpuvvada.github.io/tags/thm/</link>
    <description>Recent content in THM on Nightmare</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 26 Dec 2021 20:19:15 +0530</lastBuildDate><atom:link href="https://riteshpuvvada.github.io/tags/thm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Log4Shell 0-Day Vulnerability ðŸ’€ (CVE-2021-44228)</title>
      <link>https://riteshpuvvada.github.io/posts/log4j/</link>
      <pubDate>Sun, 26 Dec 2021 20:19:15 +0530</pubDate>
      
      <guid>https://riteshpuvvada.github.io/posts/log4j/</guid>
      <description>Log4Shell (CVE-2021-44228) is a zero-day vulnerability in Apache Log4j 2, a popular Java logging framework. It is a remote code execution (RCE) vulnerability involving arbitrary code execution earning a severity score of 10/10.
 What is LDAP Server &amp;amp; How Does it Works? The LDAP (Lightweight Directory Access Protocol) is a open, vendor-neutral, software protocol used for directory service authentication.Organizations store usernames, passwords, email addresses, printer connections, and other static information inside the directories.</description>
    </item>
    
    <item>
      <title>Bypassing Upload Filters</title>
      <link>https://riteshpuvvada.github.io/posts/bypassing_upload_filters/</link>
      <pubDate>Thu, 20 May 2021 12:05:40 +0530</pubDate>
      
      <guid>https://riteshpuvvada.github.io/posts/bypassing_upload_filters/</guid>
      <description>One of the challenging factors to a Hacker in a web application attack is the file upload. The first step in every attack is to get some code and inject it to the system to be attacked. The attack needs to find an uncomplicated and flawless path to get the code executed. Using a file upload attacker achieves his first step.
Examples Attacks on application platforms  Upload .jsp file into web tree - jsp code executed as the web user Upload .</description>
    </item>
    
    <item>
      <title>SQL Injection</title>
      <link>https://riteshpuvvada.github.io/posts/sql_writeup/</link>
      <pubDate>Wed, 19 May 2021 16:41:12 +0530</pubDate>
      
      <guid>https://riteshpuvvada.github.io/posts/sql_writeup/</guid>
      <description>What is SQL injection? SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. It generally allows an attacker to view data that they are not normally able to retrieve. This might include data belonging to other users, or any other data that the application itself is able to access. In many cases, an attacker can modify or delete this data, causing persistent changes to the application&amp;rsquo;s content or behavior.</description>
    </item>
    
  </channel>
</rss>
